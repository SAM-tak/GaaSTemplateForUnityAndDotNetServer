@inherits LayoutComponentBase

@inject IHttpContextAccessor _httpContextAccessor
@inject NavigationManager _navigationManager

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">YourGameServer</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        @* <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" /> *@
        <LanguageSelector />
        <MudMenu AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopRight" Dense="true" Class="mt-1 ml-4">
            <ActivatorContent>
                <MudText>@_httpContextAccessor.GetName()</MudText>
            </ActivatorContent>
            <ChildContent>
                @* Dont use Href="/Auth/LogOut", use NavigateTo instead. 'cos Href NavLink make wrong referer *@
                <MudNavLink Icon="@Icons.Material.Outlined.Login" OnClick="LogOut">Log Out</MudNavLink>
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            @* <MudToolBar Gutters="false">
                <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="DrawerToggle" Class="ml-3" />
                <MudBreadcrumbs Items="_items" />
                <MudSpacer />
            </MudToolBar> *@
        </MudHidden>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
            <MudGrid Class="docs-footer">
                <MudItem xs="12">
                    <MudToolBar Gutters="false" Dense="true">
                        <MudText Typo="Typo.body1">GaaS Template For Unity & .NET Copyright © 2021-2022 SAM-tak.</MudText>
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Edge="Edge.End" HRef="https://github.com/SAM-tak/GaaSTemplateForUnityAndDotNetServer"/>
                    </MudToolBar>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </MudMainContent>
    <MudScrollToTop TopOffset="400" Style="z-index:2000;">
        <MudFab StartIcon="@Icons.Material.Filled.KeyboardArrowUp" Color="Color.Primary"/>
    </MudScrollToTop>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new() {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    // just for correct referer
    void LogOut()
    {
        _navigationManager.NavigateTo("/Auth/LogOut", true);
    }
}
