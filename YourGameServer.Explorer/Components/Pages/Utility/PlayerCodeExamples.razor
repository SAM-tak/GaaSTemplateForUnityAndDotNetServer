@page "/utility/playercodeexamples"

<MudPaper Class="pa-4 mr-16">
    <MudText Typo="Typo.h6" GutterBottom="true">PlayerCode Exmaples</MudText>
    <MudTable Items="@Elements" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Login Key</MudTh>
            <MudTh>Player Code</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id.ToString("#,0")</MudTd>
            <MudTd DataLabel="Login Key">@context.Key</MudTd>
            <MudTd DataLabel="Player Code">@context.Code</MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private List<CodeExample> Elements = new();

    public class CodeExample
    {
        public ulong Id;
        public string Key = string.Empty;
        public string Code = string.Empty;
    }

    protected override async Task OnInitializedAsync()
    {
        const ushort Secret = 12345;
        for(ulong id = 1; id < 4; ++id) {
            Elements.Add(new() { Id = id, Key = IDCoder.Encode(id), Code = IDCoder.EncodeForPlayerCode(id, Secret).ToHyphened() });
        }
        for(ulong id = 10000; id < 10003; ++id) {
            Elements.Add(new() { Id = id, Key = IDCoder.Encode(id), Code = IDCoder.EncodeForPlayerCode(id, Secret).ToHyphened() });
        }
        for(ulong id = 500000; id < 500003; ++id) {
            Elements.Add(new() { Id = id, Key = IDCoder.Encode(id), Code = IDCoder.EncodeForPlayerCode(id, Secret).ToHyphened() });
        }
        for(ulong id = 10000000; id < 10000003; ++id) {
            Elements.Add(new() { Id = id, Key = IDCoder.Encode(id), Code = IDCoder.EncodeForPlayerCode(id, Secret).ToHyphened() });
        }
        for(ulong id = 100000000; id < 100000003; ++id) {
            Elements.Add(new() { Id = id, Key = IDCoder.Encode(id), Code = IDCoder.EncodeForPlayerCode(id, Secret).ToHyphened() });
        }
        for(ulong id = ulong.MaxValue - 2; id >= ulong.MaxValue - 2 && id <= ulong.MaxValue; ++id) {
            Elements.Add(new() { Id = id, Key = IDCoder.Encode(id), Code = IDCoder.EncodeForPlayerCode(id, Secret).ToHyphened() });
        }
        await Task.CompletedTask;
    }
}
